include:
  - https://gitlab.com/jitesoft/gitlab-ci-lib/raw/master/Scan/trivy.yml

stages:
  - download
  - build
  - containerize
  - scan

download:
  stage: download
  image: registry.gitlab.com/jitesoft/dockerfiles/misc:latest
  variables:
    GIT_STRATEGY: none
  script:
    - apk add --no-cache jq
    - VERSION=$(wget -qO- https://api.github.com/repos/aquasecurity/trivy/releases | jq -r ".[0].tag_name")
    - curl -SsL https://github.com/aquasecurity/trivy/archive/${VERSION}.tar.gz -o trivy.tar.gz
    - echo "${VERSION#?}" > version.txt
  artifacts:
    paths:
      - version.txt
      - trivy.tar.gz
    expire_in: 1 hour

build:
  stage: build
  parallel:
    matrix:
      - { GIT_STRATEGY: "none", GO111MODULE: "on", ARCH: "arm64", GOARCH: "arm64" }
      - { GIT_STRATEGY: "none", GO111MODULE: "on", ARCH: "amd64", GOARCH: "amd64" }
  needs:
    - job: download
      artifacts: true
  image: registry.gitlab.com/jitesoft/dockerfiles/go:latest
  script:
    - TRIVY_VERSION=$(cat version.txt)
    - apk add --no-cache gcc
    - mkdir -p ${GOPATH}/src/github.com/aquasecurity/trivy
    - tar -xzf trivy.tar.gz --strip-components=1 -C "${GOPATH}/src/github.com/aquasecurity/trivy"
    - cd ${GOPATH}/src/github.com/aquasecurity/trivy
    - go mod download
    - go build -v -a -ldflags "-s -w -X=main.version=v${TRIVY_VERSION}" ./cmd/trivy
    - mv trivy ${CI_PROJECT_DIR}/trivy-${ARCH}
  tags:
    - native-amd64
  artifacts:
    paths:
      - trivy-${ARCH}
      - version.txt
    expire_in: 1 hour

containerize:
  stage: containerize
  needs:
    - job: build
      artifacts: true
  image: registry.gitlab.com/jitesoft/dockerfiles/misc:latest
  script:
    - mkdir -p binaries/contrib
    - curl -SsL https://raw.githubusercontent.com/aquasecurity/trivy/master/contrib/Trivy.gitlab-ci.yaml -o binaries/contrib/Trivy.gitlab-ci.yaml
    - curl -SsL https://raw.githubusercontent.com/aquasecurity/trivy/master/contrib/gitlab.tpl -o binaries/contrib/gitlab.tpl
    - curl -SsL https://raw.githubusercontent.com/aquasecurity/trivy/master/contrib/hyml.tpl -o binaries/contrib/html.tpl
    - curl -SsL https://raw.githubusercontent.com/aquasecurity/trivy/master/contrib/sarif.tpl -o binaries/contrib/sarif.tpl
    - curl -SsL https://raw.githubusercontent.com/aquasecurity/trivy/master/contrib/junit.tpl -o binaries/contrib/junit.tpl
    - curl -SsL https://raw.githubusercontent.com/aquasecurity/trivy/master/contrib/asff.tpl -o binaries/contrib/asff.tpl
    - curl -SsL https://raw.githubusercontent.com/aquasecurity/trivy/master/contrib/gitlab-codequality.tpl -o binaries/contrib/gitlab-codequality.tpl
    - mv trivy-* binaries/
    - mv entrypoint binaries/
    - TAGLIST=$(helper "${CI_REGISTRY_IMAGE},jitesoft/trivy,ghcr.io/jitesoft/trivy" "latest,$(cat version.txt)")
    - docker buildx build ${TAGLIST} --progress=plain --platform=linux/amd64,linux/arm64 --build-arg VERSION=$(cat version.txt) --push .
  tags:
    - buildx
    - protected

scan:
  tags: [ protected, jitesoft ]
  stage: scan
  extends: .container_scanning
  before_script:
    - apk add --no-cache wget grep
    - VERSION=$(wget -qO- https://github.com/aquasecurity/trivy/releases | grep -oP '(?<=releases\/tag\/)(.*?)(?=\">)' | awk 'NR==1{print $1}' | head -1)
    - export SCANNING_IMAGE_NAME="${CI_REGISTRY_IMAGE}:${VERSION#?}"
    - trivy --version
  variables:
    GIT_STRATEGY: none
